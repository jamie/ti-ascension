%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (gfx/unit/Unit-Grey-Dreadnaught.eps)
%%CreationDate: (2011-07-17T20:28:50-07:00)
%%BoundingBox: -0 -0 40 80
%%HiResBoundingBox: 0 0 40 80
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 40 80
userdict begin
DisplayImage
0 0
40 80
12
40 80
1
1
1
8
000000000000000000000000000000000000003B00000000000000000000000000000000
000000000000000000000000000000000000000000000041490000000000000000000000
000000000000000000000000000000000000000000000000000041494C50000000000000
000000000000000000000000000000000000000000000000000000000000444950500000
000000000000000000000000000000000000000000000000000000000000000000414444
494C4C000000000000000000000000000000000000000000000000000000000000000000
003F414444494C5500000000000000000000000000000000000000000000000000000000
000000003F414444494C4C4C000000000000000000000000000000000000000000000000
00000000000000003F444444504C4C4C0000000000000000000000000000000000000000
00000000000000000000003B4144444955504C5000000000000000000000000000000000
0000000000000000000000000000003F41444449504C4C4C000000000000000000000000
0000000000000000000000000000000000003B41414444494C4C494C5000000000000000
000000000000000000000000000000000000000000003F4141444C505558584C4C550000
00000000000000000000000000000000000000000000000000414441415055505858554C
49550000000000000000000000000000000000000000000000000000003F414144504944
4C4C494C50500000000000000000000000000000000000000000000000000000003F4141
4C4941444144444C50500000000000000000000000000000000000000000000000000000
004141444C4C444C4C4C4C4C504C55000000000000000000000000000000000000000000
000000003B41414458494149494C494C5550500000000000000000000000000000000000
00000000000000003B44444950443F3F4141444C58555055000000000000000000000000
00000000000000000000003F414C4450504441494449444C585C504C5500000000000000
0000000000000000000000000000003B494949554C41414C505049495558505055000000
000000000000000000000000000000000000003F44444958494141494C50494955625550
550000000000000000000000000000000000000000003F4144444C50494144494C4C4C49
50554C504C500000000000000000000000000000000000000000444441444C4C3F3B4144
494444444C58696450550000000000000000000000000000000000000000004444444C4C
3B3F444C494444494958625C55550000000000000000000000000000000000000000003F
414C55494141494C49495049495550555062000000000000000000000000000000000000
00413F3F414C504C3F3F49444C5050495058555855580000000000000000000000000000
00000000003F3F3F445050443B4141494C504C4C55555558505555000000000000000000
0000000000000000003F4144495555444149445050504C444C5558626255550000000000
000000000000000000000000003F444944504C414449414C505050444458646462555000
000000000000000000000000000000003F3F4949414941353F4141504C494949445C6258
55505000000000000000000000000000000000003F414944444C41333B41444C49414444
4958625858555550000000000000000000000000000000003F414141414C443B444C585C
584C554C4450646464555555000000000000000000000000000000004141414141443F3B
4450585855504C4944495058555555585800000000000000000000000000003F41414449
4944443F4144444441444444494C5C5C555050505000000000000000000000000000003F
414444494C5050494C55585C62586262554C5C5858555050550000000000000000000000
000000414444444944494C4C55626262695C645C4C50645C5C5855555800000000000000
000000000000004444444C49504C49414444444444494444445058585555505858000000
00000000000000000000004444444C4C50504C49554C4449494C505550505C5C58585555
5800000000000000000000000000004944444C444450554C58504141494C5558554C5C58
555855586200000000000000000000000000004944444949494C4C49585041414449555C
584C504C5058585C69000000000000000000000000000000444450505C554C4958584C4C
5058625C554950585C5C585C6900000000000000000000000000004444444C5869625050
58585550505C5C58504C505C625C58586900000000000000000000000000004144494955
646250445558504C50555C58504950555C585C6264000000000000000000000000000000
00494C55625C504C55554C50555858585049506269585C62640000000000000000000000
0000000000005062695C4444504C4C4C5055555550496478696262000000000000000000
000000000000000000004C5564553F505850494C4C4C5550444969715C64000000000000
00000000000000000000000000004C4C585044585C4C4C50494C50584C49646D626D7700
00000000000000000000000000000000000058585C4C4462645055504950505C4C49697E
6D6900000000000000000000000000000000000000005055644C44626950494141495C6D
504C50717871000000000000000000000000000000000000000050586444495C5C494144
494C556255584C64786D0000000000000000000000000000000000000000415C5C3B4450
4C4144494C4C494C4C554C5C716D00000000000000000000000000000000000000004964
583F44443F3B3B3F414149494C4C49587177000000000000000000000000000000000000
00004C5C5C44555850413B3B4149585C6255505C77620000000000000000000000000000
0000000000004950553F556455413F44494C62625C505877696400000000000000000000
00000000000000000000494C3F355C6958414450495064625C4C5577695C000000000000
000000000000000000004950500000413B4C69695541555C505062625C55495564000055
55000000000000000000000000005055585000353F4C58554C444C4C4950505558625850
5800004C5855000000000000000000494C4C49555541414433415050504C5C5C4C55504C
58645C555C5555506958000000000000000050494C504144494C5C583B44555855555858
505C5C5C5C6255586462504C585555585C00000000004C49584C3F4955645C503F505055
505558584C58585C585850586D696462584C4C586258000000004444494150585C585041
3B555050505558504C505058585C554C64696971715C4C505C550000000044413F445049
4944413333444444494949444C4C4C4C494C554C4C5555585C5C5C55555000003F3F413F
3F49584C4944412A2F35353B3F41505555443F3F3B3F44494C585C697E7E625C5C585C00
413F3F3F41495550555C582F35414141444C646D6D50444449504C495881868D8D81645C
5C625C5544413F3B3F444C44494C4C33354C5C50555069776D50444C5C6255495571716D
64645C585C625C58413F3F3F3F495C55554941353F5C78625858696D6D50415864625849
495050555C77695C58625C553F3B3F3B414C6264645C55413F4C58555058696D69554950
585855494C5C717781997162626262553F3F3B3F3F49646D6964644C3349505055585862
5C555050505555445077868B958D6D5C5C625C553F3B3B3F3F4C69696962553F33555C62
6455555855555C5C625C584C4C628692A28B695C5C6262503F3F3F3B3F4C646D695C4C3F
41586264625062645C555C64646462555C5078929986696262626258413F3B3B3F4C646D
695C4949495C64646455585C5858626264646455584C71928D7869625C626258413F3F3F
3F50646D6D644C3541585C5C5C58585C58585C5C626464504458818B867169645C62625C
3F3F3F3B415064716D64553F44505C625C5C5C62625C5862646D695C506486867E6D6962
625C5C00003F3F3F41556969696455413F44556450444C58585050555C62555562778B8D
86716D646200000000000049495C6D69696458413B49646D584149585C4C505C696D5050
7178818B7E716D000000000000000000005C696D6D6964443F4C626455414C5C5C4C4C58
696D50587171788678770000000000000000000000556477717169493F4C5C645541495C
5C504C5C6264555871778B928D81000000000000000000000000585869716249444C5862
554C50585C50555C5C5C555C71788D8D8D81000000000000000000000000000000000000
004C5C5C000049585850005C585C55000000000000000000000000000000000000000000
0000000000005C00000000005C0000005C640000000000000000000000000000
end
%%PageTrailer
%%Trailer
%%EOF
